---

- name: Initialize empty lists
  set_fact:
    public_subnets: []
    private_subnets_with_outbound_access: []
    private_subnets_without_outbound_access: []

- name: Identify public subnets
  set_fact:
    public_subnets: "{{ public_subnets + [ item.name ] }}"
  with_items: "{{vpc.subnets}}"
  when: 'item.gateway is defined and item.gateway == "igw"'

- name: Create public route table and associate subnets to it
  ec2_vpc_route_table:
    aws_access_key: "{{api_keys.vpc.aws_access_key_id}}"
    aws_secret_key: "{{api_keys.vpc.aws_secret_access_key}}"
    region: "{{aws_region}}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: igw
    state: present
    subnets: "{{public_subnets}}"
    tags:
      Name: PublicRouteTable
    vpc_id: "{{created_vpc.vpc.id}}"

- name: Identify private subnets with outbound access
  set_fact:
    private_subnets_with_outbound_access: "{{ private_subnets_with_outbound_access + [ item.name ] }}"
  with_items: "{{vpc.subnets}}"
  when: 'vpc.nat_gateway_subnet_name is defined and item.gateway is defined and item.gateway == "nat"'

- name: Create private route table with NAT gateway route and associate subnets to it
  ec2_vpc_route_table:
    aws_access_key: "{{api_keys.vpc.aws_access_key_id}}"
    aws_secret_key: "{{api_keys.vpc.aws_secret_access_key}}"
    region: "{{aws_region}}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{nat_gateway.nat_gateway_id}}"
    state: present
    subnets: "{{private_subnets_with_outbound_access}}"
    tags:
      Name: PrivateRouteTableWithNAT
    vpc_id: "{{created_vpc.vpc.id}}"

- name: Identify private subnets without outbound access
  set_fact:
    private_subnets_without_outbound_access: "{{ private_subnets_without_outbound_access + [ item.name ] }}"
  with_items: "{{vpc.subnets}}"
  when: item.gateway is not defined

- name: Create private route table and associate subnets to it
  ec2_vpc_route_table:
    aws_access_key: "{{api_keys.vpc.aws_access_key_id}}"
    aws_secret_key: "{{api_keys.vpc.aws_secret_access_key}}"
    region: "{{aws_region}}"
    routes: []
    state: present
    subnets: "{{private_subnets_without_outbound_access}}"
    tags:
      Name: PrivateRouteTable
    vpc_id: "{{created_vpc.vpc.id}}"

